
AC_PREREQ(2.50)

AC_INIT([OpenSCADA],[0.6.0],[rom_as@fromru.com])
AC_CANONICAL_TARGET
AM_INIT_AUTOMAKE(AC_PACKAGE_TARNAME, AC_PACKAGE_VERSION)
AM_CONFIG_HEADER(config.h)

AC_LANG(C++)

# Perform program name transformation
#AC_ARG_PROGRAM

# Enable options
AC_ENABLE_SHARED(yes)
AC_ENABLE_STATIC(yes)
AC_LIBTOOL_DLOPEN

# AM_GNU_GETTEXT

# Checks for programs.
AC_PROG_CC
AC_PROG_CXX
AC_PROG_RANLIB
AC_PROG_INSTALL
AC_PROG_LN_S
AC_PROG_MAKE_SET
AC_PROG_LIBTOOL

#Gettext utilites check
AC_CHECK_PROG(XGETTEXT, xgettext, xgettext, false)
AC_CHECK_PROG(MSGMERGE, msgmerge, msgmerge, false)
AC_CHECK_PROG(MSGFMT, msgfmt, msgfmt, false)
if test ${XGETTEXT} = false || test ${MSGMERGE} = false || ${MSGFMT} = false; then 
    AC_MSG_ERROR([Some gettext I18N utilite no present! Install gettext utilites package.]) 
fi

AM_SANITY_CHECK

# Checks for header files.
AC_HEADER_DIRENT
AC_HEADER_STDC
AC_HEADER_SYS_WAIT
AC_CHECK_HEADERS([time.h signal.h semaphore.h fcntl.h math.h errno.h syslog.h unistd.h dirent.h stdio.h stdarg.h stdlib.h getopt.h dlfcn.h locale.h langinfo.h iconv.h libintl.h sys/types.h sys/stat.h sys/wait.h sys/time.h sys/utsname.h pthread.h],[],
    [AC_MSG_ERROR(Some GLibC headers not found. Install or check GLibC developing package!)])
AC_CHECK_HEADERS([string vector map exception typeinfo deque],[],
    [AC_MSG_ERROR(Some standart template libs STL headers not found. Install or check STL-StdC++ developing package!)])
#- Library headers check -
AC_CHECK_HEADERS([gd.h gdfonts.h gdfontt.h],[],
    [AC_MSG_ERROR(GD library headers not found. Install or check GD developing package!)])
AC_CHECK_HEADERS([expat.h],[],
    [AC_MSG_ERROR(Expat XML parser library headers not found. Install or check Expat developing package!)])

# Checks for typedefs, structures, and compiler characteristics.
AC_HEADER_STDBOOL
AC_C_CONST
AC_C_INLINE
AC_TYPE_OFF_T
AC_TYPE_PID_T
AC_TYPE_SIZE_T
AC_HEADER_TIME
AC_STRUCT_TM

# Set up system library
sys_lib="/usr/lib"
if test $target_cpu = "x86_64"; then sys_lib="/usr/lib64"; fi
AC_SUBST(sys_lib)

# Check for libraries
AC_CHECK_LIB([m],[sin],[AC_MSG_NOTICE(Pass global library using)],
    [AC_MSG_ERROR(Math library not found. Install or check GLibC core package!)])
AC_CHECK_LIB([dl],[dlopen],[AC_MSG_NOTICE(Pass global library using)],
    [AC_MSG_ERROR(Dynamik linking library not found. Install or check GLibC core package!)])
#AC_CHECK_LIB([rt],[pthread_create],[AC_MSG_NOTICE(Pass global library using)],
#    [AC_MSG_ERROR(Pthread library not found. Install or check GLibC core package!)])
AC_CHECK_LIB([crypt],[crypt],[AC_MSG_NOTICE(Pass global library using)],
    [AC_MSG_ERROR(Crypt library not found. Install or check GLibC core package!)])
AC_CHECK_LIB([expat],[XML_ParserCreate],[AC_MSG_NOTICE(Pass global library using)],
    [AC_MSG_ERROR(Expat library not found. Install or check Expat package!)])
AC_CHECK_LIB([gd],[gdImageCreate],[AC_MSG_NOTICE(Pass global library using)],
    [AC_MSG_ERROR(GD library not found. Install or check GDlib package!)])
#AC_CHECK_LIB([png],[png_create_info_struct],[AC_MSG_NOTICE(Pass global library using)],
#    [AC_MSG_ERROR(PNG library not found. Install or check PNG library package!)])
#AC_CHECK_LIB([z],[compress],[AC_MSG_NOTICE(Pass global library using)],
#    [AC_MSG_ERROR(ZLib not found. Install or check ZLib package!)])

# Checks for library functions.
AC_FUNC_CLOSEDIR_VOID
AC_FUNC_MALLOC
AC_FUNC_MKTIME
AC_FUNC_REALLOC
AC_FUNC_SELECT_ARGTYPES
AC_TYPE_SIGNAL
AC_FUNC_STAT
#AC_CHECK_FUNCS([getcwd gethostbyname inet_ntoa memmove memset mkdir nl_langinfo pow select setenv setlocale socket strdup strerror strtol uname])

AC_ISC_POSIX

AC_PREFIX_DEFAULT("/usr")
oscd_moduldir="${libdir}/${PACKAGE}"
AC_SUBST(oscd_moduldir)
oscd_localedir="\${DESTDIR}${datadir}/locale"
AC_SUBST(oscd_localedir)
oscd_docdir="\${DESTDIR}${datadir}/doc/${PACKAGE_TARNAME}-${PACKAGE_VERSION}"
AC_SUBST(oscd_docdir)
oscd_modulpref="oscd_"
AC_SUBST(oscd_modulpref)

LDFLAGS=
CXXFLAGS="-O2 -DOSC_DEBUG -DOSC_HASHMAP"

AC_SUBST(subdir_mod)

AC_CONFIG_FILES(Makefile src/Makefile src/moduls/Makefile
	src/moduls/arhiv/Makefile src/moduls/bd/Makefile src/moduls/protocol/Makefile 
	src/moduls/special/Makefile src/moduls/daq/Makefile src/moduls/transport/Makefile
	src/moduls/ui/Makefile)

#====== Check build modules ======
#-- Archive modules --
AC_ARG_ENABLE(BaseArh,AC_HELP_STRING([--disable-BaseArh], [disable build module Archive/BaseArh]),
[ if test $enableval = yes; then ModBaseArh=true; else ModBaseArh=false; fi],[ ModBaseArh=true; ])
#-- DB modules --
AC_ARG_ENABLE(DBF,AC_HELP_STRING([--disable-DBF], [disable build module DB/DBF]),
[ if test $enableval = yes; then ModDBF=true; else ModDBF=false; fi],[ ModDBF=true; ])
AC_ARG_ENABLE(MySQL,AC_HELP_STRING([--disable-MySQL], [disable build module DB/MySQL]),
[ if test $enableval = yes; then ModMySQL=true; else ModMySQL=false; fi],[ ModMySQL=true; ])
AC_ARG_ENABLE(SQLite,AC_HELP_STRING([--disable-SQLite], [disable build module DB/SQLite]),
[ if test $enableval = yes; then ModSQLite=true; else ModSQLite=false; fi],[ ModSQLite=true; ])
AC_ARG_ENABLE(FireBird,AC_HELP_STRING([--disable-FireBird], [disable build module DB/FireBird]),
[ if test $enableval = yes; then ModFireBird=true; else ModFireBird=false; fi],[ ModFireBird=true; ])
#-- Transport protocol modules --
AC_ARG_ENABLE(HTTP,AC_HELP_STRING([--disable-HTTP], [disable build module Protocol/HTTP]),
[ if test $enableval = yes; then ModHTTP=true; else ModHTTP=false; fi],[ ModHTTP=true; ])
AC_ARG_ENABLE(SelfSystem,AC_HELP_STRING([--disable-SelfSystem], [disable build module Protocol/SelfSystem]),
[ if test $enableval = yes; then ModSelfSystem=true; else ModSelfSystem=false; fi],[ ModSelfSystem=true; ])
#-- Special modules --
AC_ARG_ENABLE(SystemTests,AC_HELP_STRING([--disable-SystemTests], [disable build module Special/SystemTests]),
[ if test $enableval = yes; then ModSystemTests=true; else ModSystemTests=false; fi],[ ModSystemTests=true; ])
AC_ARG_ENABLE(FLibComplex1,AC_HELP_STRING([--disable-FLibComplex1], [disable build module Special/FLibComplex1]),
[ if test $enableval = yes; then ModFLibComplex1=true; else ModFLibComplex1=false; fi],[ ModFLibComplex1=true; ])
AC_ARG_ENABLE(FLibMath,AC_HELP_STRING([--disable-FLibMath], [disable build module Special/FLibMath]),
[ if test $enableval = yes; then ModFLibMath=true; else ModFLibMath=false; fi],[ ModFLibMath=true; ])
AC_ARG_ENABLE(FLibSYS,AC_HELP_STRING([--disable-FLibSYS], [disable build module Special/FLibSYS]),
[ if test $enableval = yes; then ModFLibSYS=true; else ModFLibSYS=false; fi],[ ModFLibSYS=true; ])
#-- DAQ modules --
AC_ARG_ENABLE(OperationSystem,AC_HELP_STRING([--disable-OperationSystem], [disable build module DAQ/OperationSystem]),
[ if test $enableval = yes; then ModOperationSystem=true; else ModOperationSystem=false; fi],[ ModOperationSystem=true; ])
AC_ARG_ENABLE(BlockCalc,AC_HELP_STRING([--disable-BlockCalc], [disable build module DAQ/BlockCalc]),
[ if test $enableval = yes; then ModBlockCalc=true; else ModBlockCalc=false; fi],[ ModBlockCalc=true; ])
AC_ARG_ENABLE(JavaLikeCalc,AC_HELP_STRING([--disable-JavaLikeCalc], [disable build module DAQ/JavaLikeCalc]),
[ if test $enableval = yes; then ModJavaLikeCalc=true; else ModJavaLikeCalc=false; fi],[ ModJavaLikeCalc=true; ])
AC_ARG_ENABLE(DiamondBoards,AC_HELP_STRING([--disable-DiamondBoards], [disable build module DAQ/DiamondBoards]),
[ if test $enableval = yes; then ModDiamondBoards=true; else ModDiamondBoards=false; fi],[ ModDiamondBoards=true; ])
AC_ARG_ENABLE(LogicLev,AC_HELP_STRING([--disable-LogicLev], [disable build module DAQ/LogicLev]),
[ if test $enableval = yes; then ModLogicLev=true; else ModLogicLev=false; fi],[ ModLogicLev=true; ])
AC_ARG_ENABLE(SNMP,AC_HELP_STRING([--disable-SNMP], [disable build module DAQ/SNMP]),
[ if test $enableval = yes; then ModSNMP=true; else ModSNMP=false; fi],[ ModSNMP=true; ])
AC_ARG_ENABLE(CIF,AC_HELP_STRING([--disable-CIF], [disable build module DAQ/CIF]),
[ if test $enableval = yes; then ModCIF=true; else ModCIF=false; fi],[ ModCIF=true; ])
AC_ARG_ENABLE(ModBus,AC_HELP_STRING([--disable-ModBus], [disable build module DAQ/ModBus]),
[ if test $enableval = yes; then ModModBus=true; else ModModBus=false; fi],[ ModModBus=true; ])
AC_ARG_ENABLE(DAQTransporter,AC_HELP_STRING([--disable-DAQTransporter], [disable build module DAQ/Transporter]),
[ if test $enableval = yes; then ModDAQTransporter=true; else ModDAQTransporter=false; fi],[ ModDAQTransporter=true; ])
#-- Transport modules --
AC_ARG_ENABLE(Sockets,AC_HELP_STRING([--disable-Sockets], [disable build module Transport/Sockets]),
[ if test $enableval = yes; then ModSockets=true; else ModSockets=false; fi],[ ModSockets=true; ])
#-- UI modules --
AC_ARG_ENABLE(VCAEngine,AC_HELP_STRING([--disable-VCAEngine], [disable build module UI/VCAEngine]),
[ if test $enableval = yes; then ModVCAEngine=true; else ModVCAEngine=false; fi],[ ModVCAEngine=true; ])
AC_ARG_ENABLE(Vision,AC_HELP_STRING([--disable-Vision], [disable build module UI/Vision]),
[ if test $enableval = yes; then ModVision=true; else ModVision=false; fi],[ ModVision=true; ])
AC_ARG_ENABLE(QTStarter,AC_HELP_STRING([--disable-QTStarter], [disable build module UI/QTStarter]),
[ if test $enableval = yes; then ModQTStarter=true; else ModQTStarter=false; fi],[ ModQTStarter=true; ])
AC_ARG_ENABLE(QTCfg,AC_HELP_STRING([--disable-QTCfg], [disable build module UI/QTCfg]),
[ if test $enableval = yes; then ModQTCfg=true; else ModQTCfg=false; fi],[ ModQTCfg=true; ])
AC_ARG_ENABLE(WebCfg,AC_HELP_STRING([--disable-WebCfg], [disable build module UI/WebCfg]),
[ if test $enableval = yes; then ModWebCfg=true; else ModWebCfg=false; fi],[ ModWebCfg=true; ])
AC_ARG_ENABLE(WebDbg,AC_HELP_STRING([--disable-WebDbg], [disable build module UI/WebDbg]),
[ if test $enableval = yes; then ModWebDbg=true; else ModWebDbg=false; fi],[ ModWebDbg=true; ])


AC_MSG_RESULT(========== Build modules list =============)
#-- Archive modules --
AC_SUBST(ArchSub_mod)
if test ${ModBaseArh} = true; then
    AC_MSG_RESULT(Build module: Archive/BaseArh)
    AC_CONFIG_FILES(src/moduls/arhiv/BaseArh/Makefile)
    ArchSub_mod="${ArchSub_mod}BaseArh "
fi
#-- DB modules --
AC_SUBST(DBSub_mod)
if test ${ModDBF} = true; then
    AC_MSG_RESULT(Build module: DB/DBF)
    AC_CONFIG_FILES(src/moduls/bd/DBF/Makefile)
    DBSub_mod="${DBSub_mod}DBF "
fi
if test ${ModMySQL} = true; then
    AC_MSG_RESULT(Build module: DB/MySQL)
    AC_CONFIG_FILES(src/moduls/bd/MySQL/Makefile)
    DBSub_mod="${DBSub_mod}MySQL "
    #--- Modules checkings ---
    AC_CHECK_HEADERS([mysql/mysql.h mysql/errmsg.h],[],
	[AC_MSG_ERROR(DB/MySQL: Some MySQL API headers not found. Install or check MySQL library developing package!)])
    AC_CHECK_LIB([mysqlclient],[mysql_init],[AC_MSG_NOTICE(Pass global library using)],
	[AC_MSG_ERROR(DB/MySQL: MySQL API library not found. Install or check MySQL library package!)])
fi
if test ${ModSQLite} = true; then
    AC_MSG_RESULT(Build module: DB/SQLite)
    AC_CONFIG_FILES(src/moduls/bd/SQLite/Makefile)
    DBSub_mod="${DBSub_mod}SQLite "
    #--- Modules checkings ---
    AC_CHECK_HEADERS([sqlite3.h],[],
	[AC_MSG_ERROR(DB/SQLite: Some SQLite3 API headers not found. Install or check SQLite3 library developing package!)])
    AC_CHECK_LIB([sqlite3],[sqlite3_open],[AC_MSG_NOTICE(Pass global library using)],
	[AC_MSG_ERROR(DB/SQLite: SQLite3 API library not found. Install or check SQLite3 library package!)])    
fi
if test ${ModFireBird} = true; then
    AC_MSG_RESULT(Build module: DB/FireBird)
    AC_CONFIG_FILES(src/moduls/bd/FireBird/Makefile)
    DBSub_mod="${DBSub_mod}FireBird "
    #--- Modules checkings ---
    AC_CHECK_HEADERS([ibase.h],[],
	[AC_MSG_ERROR(DB/FireBird: Some FireBird API headers not found. Install or check FireBird installation!)])
    AC_CHECK_LIB([fbclient],[isc_sqlcode],[AC_MSG_NOTICE(Pass global library using)],
	[AC_MSG_ERROR(DB/FireBird: FireBird API client library not found. Install or check FireBird installation!)])
fi
#-- Transport protocol modules --
AC_SUBST(ProtSub_mod)
if test ${ModHTTP} = true; then
    AC_MSG_RESULT(Build module: Protocol/HTTP)
    AC_CONFIG_FILES(src/moduls/protocol/HTTP/Makefile)
    ProtSub_mod="${ProtSub_mod}HTTP "
fi
if test ${ModSelfSystem} = true; then
    AC_MSG_RESULT(Build module: Protocol/SelfSystem)
    AC_CONFIG_FILES(src/moduls/protocol/SelfSystem/Makefile)
    ProtSub_mod="${ProtSub_mod}SelfSystem "
fi
#-- Special modules --
AC_SUBST(SpecSub_mod)
if test ${ModSystemTests} = true; then
    AC_MSG_RESULT(Build module: Special/SystemTests)
    AC_CONFIG_FILES(src/moduls/special/SystemTests/Makefile)
    SpecSub_mod="${SpecSub_mod}SystemTests "
fi
if test ${ModFLibComplex1} = true; then
    AC_MSG_RESULT(Build module: Special/FLibComplex1)
    AC_CONFIG_FILES(src/moduls/special/FLibComplex1/Makefile)
    SpecSub_mod="${SpecSub_mod}FLibComplex1 "
fi
if test ${ModFLibMath} = true; then
    AC_MSG_RESULT(Build module: Special/FLibMath)
    AC_CONFIG_FILES(src/moduls/special/FLibMath/Makefile)
    SpecSub_mod="${SpecSub_mod}FLibMath "
fi
if test ${ModFLibSYS} = true; then
    AC_MSG_RESULT(Build module: Special/FLibSYS)
    AC_CONFIG_FILES(src/moduls/special/FLibSYS/Makefile)
    SpecSub_mod="${SpecSub_mod}FLibSYS "
fi
#-- DAQ modules --
AC_SUBST(DAQSub_mod)
if test ${ModOperationSystem} = true; then
    AC_MSG_RESULT(Build module: DAQ/OperationSystem)
    AC_CONFIG_FILES(src/moduls/daq/OperationSystem/Makefile)
    DAQSub_mod="${DAQSub_mod}OperationSystem "
fi
if test ${ModBlockCalc} = true; then
    AC_MSG_RESULT(Build module: DAQ/BlockCalc)
    AC_CONFIG_FILES(src/moduls/daq/BlockCalc/Makefile)
    DAQSub_mod="${DAQSub_mod}BlockCalc "
fi
if test ${ModJavaLikeCalc} = true; then
    AC_MSG_RESULT(Build module: DAQ/JavaLikeCalc)
    AC_CONFIG_FILES(src/moduls/daq/JavaLikeCalc/Makefile)
    DAQSub_mod="${DAQSub_mod}JavaLikeCalc "
    #--- Modules checkings ---
    AC_PROG_YACC
    AC_CHECK_PROG(YACC_OK, ${YACC}, true, false)
    if test ${YACC_OK} = false; then AC_MSG_ERROR([No one syntax generator present! Install YACC like programm: bison, zubr or byacc.]) fi
fi
if test ${ModDiamondBoards} = true && test $target_cpu != "x86_64"; then
    AC_MSG_RESULT(Build module: DAQ/DiamondBoards)
    AC_CONFIG_FILES(src/moduls/daq/DiamondBoards/Makefile)
    DAQSub_mod="${DAQSub_mod}DiamondBoards "
fi
if test ${ModLogicLev} = true; then
    AC_MSG_RESULT(Build module: DAQ/LogicLev)
    AC_CONFIG_FILES(src/moduls/daq/LogicLev/Makefile)
    DAQSub_mod="${DAQSub_mod}LogicLev "
fi
if test ${ModSNMP} = true; then
    AC_MSG_RESULT(Build module: DAQ/SNMP)
    AC_CONFIG_FILES(src/moduls/daq/SNMP/Makefile)
    DAQSub_mod="${DAQSub_mod}SNMP "
    #--- Modules checkings ---    
    AC_CHECK_HEADERS([net-snmp/net-snmp-config.h],[],
	[AC_MSG_ERROR(DAQ/SNMP: Net SNMP library headers not found. Install or check of Net SNMP developing package!)])
#    AC_CHECK_LIB([crypto],[SSL_CTX_use_certificate],[AC_MSG_NOTICE(Pass global library using)],
#	[AC_MSG_ERROR(Open SSL library not found. Install or check Open SSL library package!)])
#    AC_CHECK_LIB([netsnmp],[snmp_sess_init],[AC_MSG_NOTICE(Pass global library using)],
#	[AC_MSG_ERROR(DAQ/SNMP: Net SNMP API library not found. Install or check Net SNMP library package!)],
#	[crypto])
fi
if test ${ModCIF} = true; then
    AC_MSG_RESULT(Build module: DAQ/CIF)
    AC_CONFIG_FILES(src/moduls/daq/CIF/Makefile)
    DAQSub_mod="${DAQSub_mod}CIF "
    #--- Modules checkings ---
    AC_CHECK_HEADERS([ctype.h],[],
	[AC_MSG_ERROR(DAQ/CIF: Some GLibC network headers not found. Install or check GLibC developing package!)])
    AC_CHECK_HEADERS([linux/kd.h],[],
	[AC_MSG_ERROR(DAQ/CIF: Linux kernel headers not found. Install or check Linux kernel headers package!)])	
fi
if test ${ModModBus} = true; then
    AC_MSG_RESULT(Build module: DAQ/ModBus)
    AC_CONFIG_FILES(src/moduls/daq/ModBus/Makefile)
    DAQSub_mod="${DAQSub_mod}ModBus "
fi
if test ${ModDAQTransporter} = true; then
    AC_MSG_RESULT(Build module: DAQ/Transporter)
    AC_CONFIG_FILES(src/moduls/daq/Transporter/Makefile)
    DAQSub_mod="${DAQSub_mod}Transporter "
fi
#-- Transport modules --
AC_SUBST(TranspSub_mod)
if test ${ModSockets} = true; then
    AC_MSG_RESULT(Build module: Transport/Sockets)
    AC_CONFIG_FILES(src/moduls/transport/Sockets/Makefile)
    TranspSub_mod="${TranspSub_mod}Sockets "
    #--- Modules checkings ---
    AC_CHECK_HEADERS([sys/un.h sys/socket.h sys/select.h arpa/inet.h netinet/in.h netdb.h],[],
	[AC_MSG_ERROR(Transport/Sockets: Some GLibC network headers not found. Install or check GLibC developing package!)])
fi
#-- UI modules --
AC_SUBST(UISub_mod)
if test ${ModVCAEngine} = true; then
    AC_MSG_RESULT(Build module: UI/VCAEngine)
    AC_CONFIG_FILES(src/moduls/ui/VCAEngine/Makefile)
    UISub_mod="${UISub_mod}VCAEngine "
fi
if test ${ModVision} = true; then
    AC_MSG_RESULT(Build module: UI/Vision)
    AC_CONFIG_FILES(src/moduls/ui/Vision/Makefile)
    UISub_mod="${UISub_mod}Vision "
    QT4use=true;
fi
if test ${ModQTStarter} = true; then
    AC_MSG_RESULT(Build module: UI/QTStarter)
    AC_CONFIG_FILES(src/moduls/ui/QTStarter/Makefile)
    UISub_mod="${UISub_mod}QTStarter "
    QT4use=true;    
fi
if test ${ModQTCfg} = true; then
    AC_MSG_RESULT(Build module: UI/QTCfg)
    AC_CONFIG_FILES(src/moduls/ui/QTCfg/Makefile)
    UISub_mod="${UISub_mod}QTCfg "
    QT4use=true;
fi
if test ${ModWebCfg} = true; then
    AC_MSG_RESULT(Build module: UI/WebCfg)
    AC_CONFIG_FILES(src/moduls/ui/WebCfg/Makefile)
    UISub_mod="${UISub_mod}WebCfg "
fi
if test ${ModWebDbg} = true; then
    AC_MSG_RESULT(Build module: UI/WebDbg)
    AC_CONFIG_FILES(src/moduls/ui/WebDbg/Makefile)
    UISub_mod="${UISub_mod}WebDbg "
fi
AC_MSG_RESULT(===========================================)

#QT4 check
if test ${QT4use} = true; then
    AC_CHECK_PROGS(QT4_MOC, moc-qt4 moc, false)
    AC_CHECK_PROGS(QT4_RCC, rcc-qt4 rcc, false)
    if test ${QT4_MOC} = false || test ${QT4_RCC} = false; 
    then AC_MSG_ERROR([QT4 development utilites no present! Install QT4 library development package.]) fi
#--- Modules checkings ---    
#    AC_CHECK_HEADERS([qt4/QtCore/Qt],[],
#	[AC_MSG_ERROR(UI/QTCfg: Some QT4 library headers not found. Install or check of QT4 developing package!)])
#    AC_CHECK_LIB([QtGui],[QApplication::QApplication],[AC_MSG_NOTICE(Pass global library using)],
#	[AC_MSG_ERROR(UI/QTCfg: QT4 library not found. Install or check QT4 library package!)])
fi

AC_OUTPUT
